@model Job_Portal_MVC.Openings

@{
    ViewBag.Title = "AddJob";
}
@Html.Partial("admin_navbar")

<h2>AddJob</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Openings</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.experience, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.experience, new SelectList(Enum.GetValues(typeof(Job_Portal_MVC.Models.Experience))), "Select experience required", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.experience, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.qualification, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.qualification, new SelectList(Enum.GetValues(typeof(Job_Portal_MVC.Models.Qualifications))), "Select qualification required", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.qualification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vacancy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vacancy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vacancy, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.company, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.company, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.company, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AppliedJob")
</div>
